<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= track.title %> - <%= track.artist %> â€¢ SAOCLAO</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    
    :root {
      --bg-primary: #0f0f0f;
      --bg-secondary: #1a1a1a;
      --bg-card: #1e1e1e;
      --text-primary: #ffffff;
      --text-secondary: #b3b3b3;
      --accent-color: #1ed760;
      --border-color: #2a2a2a;
    }
    
    body {
      font-family: 'Inter', sans-serif;
      background: var(--bg-primary);
      color: var(--text-primary);
      line-height: 1.6;
    }
    
    .header {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 64px;
      background: rgba(15, 15, 15, 0.95);
      backdrop-filter: blur(20px);
      border-bottom: 1px solid var(--border-color);
      padding: 0 32px;
      display: flex;
      align-items: center;
      gap: 24px;
      z-index: 100;
    }
    
    .back-btn {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.1);
      border: none;
      color: var(--text-primary);
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.3s;
    }
    
    .back-btn:hover {
      background: rgba(255, 255, 255, 0.15);
      transform: scale(1.05);
    }
    
    .header-title {
      font-size: 18px;
      font-weight: 700;
    }
    
    .container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 100px 40px 40px;
    }
    
    .hero-section {
      display: grid;
      grid-template-columns: 1fr 400px;
      gap: 48px;
      margin-bottom: 48px;
      background: linear-gradient(135deg, rgba(30, 215, 96, 0.1) 0%, transparent 100%);
      padding: 40px;
      border-radius: 16px;
    }
    
    .player-section {
      display: flex;
      flex-direction: column;
      gap: 24px;
    }
    
    .track-header {
      display: flex;
      align-items: center;
      gap: 16px;
    }
    
    .play-button {
      width: 64px;
      height: 64px;
      border-radius: 50%;
      background: var(--accent-color);
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s;
      box-shadow: 0 8px 24px rgba(30, 215, 96, 0.4);
    }
    
    .play-button:hover {
      transform: scale(1.08);
      box-shadow: 0 12px 32px rgba(30, 215, 96, 0.6);
    }
    
    .play-button i {
      font-size: 24px;
      color: #000;
      margin-left: 3px;
    }
    
    .track-info h1 {
      font-size: 32px;
      font-weight: 800;
      margin-bottom: 8px;
    }
    
    .track-artist {
      font-size: 18px;
      color: var(--text-secondary);
      font-weight: 500;
    }
    
    .track-meta {
      display: flex;
      align-items: center;
      gap: 16px;
      margin-top: 16px;
      flex-wrap: wrap;
    }
    
    .meta-item {
      display: flex;
      align-items: center;
      gap: 8px;
      color: var(--text-secondary);
      font-size: 14px;
    }
    
    .tag {
      background: rgba(30, 215, 96, 0.15);
      color: var(--accent-color);
      padding: 6px 16px;
      border-radius: 20px;
      font-size: 13px;
      font-weight: 600;
    }
    
    .waveform-container {
      position: relative;
      height: 120px;
      background: rgba(255, 255, 255, 0.05);
      border-radius: 12px;
      overflow: hidden;
      cursor: pointer;
      padding: 20px;
    }
    
    .waveform {
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      gap: 2px;
    }
    
    .waveform-bar {
      flex: 1;
      background: rgba(255, 255, 255, 0.3);
      border-radius: 2px;
      transition: all 0.2s;
      height: 40%;
    }
    
    .waveform-bar.active {
      background: var(--accent-color);
    }
    
    .waveform-bar:hover {
      background: var(--accent-color);
      opacity: 0.8;
    }
    
    .time-display {
      display: flex;
      justify-content: space-between;
      color: var(--text-secondary);
      font-size: 12px;
      font-weight: 600;
      margin-top: 12px;
    }
    
    .action-buttons {
      display: flex;
      gap: 16px;
      flex-wrap: wrap;
    }
    
    .action-btn {
      padding: 12px 24px;
      border-radius: 500px;
      border: 1px solid var(--border-color);
      background: transparent;
      color: var(--text-secondary);
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 14px;
      font-weight: 600;
      transition: all 0.3s;
      font-family: 'Inter', sans-serif;
    }
    
    .action-btn:hover {
      border-color: var(--accent-color);
      color: var(--accent-color);
      transform: translateY(-2px);
    }
    
    .action-btn.liked {
      color: #ff4444;
      border-color: #ff4444;
    }
    
    .cover-section {
      position: relative;
    }
    
    .cover-image {
      width: 100%;
      aspect-ratio: 1;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 16px 48px rgba(0, 0, 0, 0.6);
    }
    
    .cover-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .stats {
      display: flex;
      justify-content: space-around;
      margin-top: 24px;
      padding: 20px;
      background: rgba(255, 255, 255, 0.05);
      border-radius: 12px;
    }
    
    .stat-item {
      text-align: center;
    }
    
    .stat-value {
      font-size: 24px;
      font-weight: 800;
      color: var(--accent-color);
      display: block;
    }
    
    .stat-label {
      font-size: 13px;
      color: var(--text-secondary);
      font-weight: 500;
    }
    
    .comments-section {
      background: var(--bg-card);
      border-radius: 16px;
      padding: 32px;
    }
    
    .comments-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 32px;
    }
    
    .comments-title {
      font-size: 24px;
      font-weight: 800;
    }
    
    .comment-input-section {
      display: flex;
      gap: 16px;
      margin-bottom: 32px;
      padding-bottom: 32px;
      border-bottom: 1px solid var(--border-color);
    }
    
    .user-avatar {
      width: 48px;
      height: 48px;
      border-radius: 50%;
      background: linear-gradient(135deg, var(--accent-color), #1db954);
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 700;
      color: #000;
      flex-shrink: 0;
    }
    
    .comment-input-wrapper {
      flex: 1;
      display: flex;
      gap: 12px;
    }
    
    .comment-input {
      flex: 1;
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid var(--border-color);
      border-radius: 500px;
      padding: 12px 24px;
      color: var(--text-primary);
      font-size: 14px;
      font-family: 'Inter', sans-serif;
      transition: all 0.3s;
    }
    
    .comment-input:focus {
      outline: none;
      border-color: var(--accent-color);
      background: rgba(255, 255, 255, 0.08);
    }
    
    .comment-submit {
      padding: 12px 32px;
      background: var(--accent-color);
      border: none;
      border-radius: 500px;
      color: #000;
      font-weight: 700;
      cursor: pointer;
      transition: all 0.3s;
      font-family: 'Inter', sans-serif;
    }
    
    .comment-submit:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 12px rgba(30, 215, 96, 0.4);
    }
    
    .comments-list {
      display: flex;
      flex-direction: column;
      gap: 24px;
    }
    
    .comment {
      display: flex;
      gap: 16px;
    }
    
    .comment-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: linear-gradient(135deg, #667eea, #764ba2);
      flex-shrink: 0;
    }
    
    .comment-avatar img {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      object-fit: cover;
    }
    
    .comment-content {
      flex: 1;
    }
    
    .comment-header {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-bottom: 8px;
    }
    
    .comment-author {
      font-weight: 700;
      font-size: 14px;
    }
    
    .comment-time {
      font-size: 13px;
      color: var(--text-secondary);
    }
    
    .comment-text {
      font-size: 14px;
      color: var(--text-secondary);
      line-height: 1.6;
      margin-bottom: 12px;
    }
    
    .comment-actions {
      display: flex;
      gap: 20px;
    }
    
    .comment-action {
      background: none;
      border: none;
      color: var(--text-secondary);
      cursor: pointer;
      font-size: 13px;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 6px;
      transition: all 0.2s;
      font-family: 'Inter', sans-serif;
    }
    
    .comment-action:hover {
      color: var(--accent-color);
    }
    
    .comment-action.liked {
      color: #ff4444;
    }
    
    .empty-comments {
      text-align: center;
      padding: 60px 20px;
      color: var(--text-secondary);
    }
    
    @media (max-width: 968px) {
      .hero-section {
        grid-template-columns: 1fr;
      }
      
      .cover-section {
        order: -1;
      }
      
      .container {
        padding: 100px 20px 40px;
      }
    }
  </style>
</head>
<body>
  <header class="header">
    <button class="back-btn" onclick="window.history.back()">
      <i class="fa-solid fa-arrow-left"></i>
    </button>
    <div class="header-title">Now Playing</div>
  </header>

  <div class="container">
    <div class="hero-section">
      <div class="player-section">
        <div class="track-header">
          <button class="play-button" onclick="playTrack('<%= track._id %>', '<%= track.title %>', '<%= track.artist %>', '<%= track.coverUrl %>', '<%= track.audioUrl %>')">
            <i class="fa-solid fa-play"></i>
          </button>
          <div class="track-info">
            <h1><%= track.title %></h1>
            <div class="track-artist"><%= track.artist || 'Unknown Artist' %></div>
          </div>
        </div>
        
        <div class="track-meta">
          <div class="meta-item">
            <i class="fa-regular fa-clock"></i>
            <span><%= new Date(track.createdAt).toLocaleDateString('vi-VN') %></span>
          </div>
          <% if (track.genres && track.genres.length > 0) { %>
            <% track.genres.slice(0, 3).forEach(genre => { %>
              <span class="tag">#<%= genre %></span>
            <% }) %>
          <% } %>
        </div>
        
        <div class="waveform-container" id="waveformContainer">
          <div class="waveform" id="waveform"></div>
        </div>
        <div class="time-display">
          <span id="currentTime">0:00</span>
          <span id="duration">--:--</span>
        </div>
        
        <div class="action-buttons">
          <button class="action-btn" id="likeBtn" data-track-id="<%= track._id %>">
            <i class="fa-regular fa-heart"></i>
            <span id="likeCount"><%= track.likes || 0 %></span>
          </button>
          <button class="action-btn" onclick="addToQueue({id: '<%= track._id %>', title: '<%= track.title %>', artist: '<%= track.artist %>', cover: '<%= track.coverUrl %>', audioUrl: '<%= track.audioUrl %>'})">
            <i class="fa-solid fa-list"></i>
            <span>Add to Queue</span>
          </button>
          <button class="action-btn">
            <i class="fa-solid fa-share"></i>
            <span>Share</span>
          </button>
        </div>
      </div>
      
      <div class="cover-section">
        <div class="cover-image">
          <img src="<%= track.coverUrl || 'https://images.unsplash.com/photo-1514525253161-7a46d19cd819?w=500' %>" alt="<%= track.title %>">
        </div>
        <div class="stats">
          <div class="stat-item">
            <span class="stat-value" id="playCount"><%= track.playCount || 0 %></span>
            <span class="stat-label">Plays</span>
          </div>
          <div class="stat-item">
            <span class="stat-value"><%= track.likes || 0 %></span>
            <span class="stat-label">Likes</span>
          </div>
          <div class="stat-item">
            <span class="stat-value"><%= comments.length %></span>
            <span class="stat-label">Comments</span>
          </div>
        </div>
      </div>
    </div>
    
    <div class="comments-section">
      <div class="comments-header">
        <h2 class="comments-title">Comments (<%= comments.length %>)</h2>
      </div>
      
      <div class="comment-input-section">
        <div class="user-avatar"><%= user.username.charAt(0).toUpperCase() %></div>
        <div class="comment-input-wrapper">
          <input type="text" class="comment-input" placeholder="Write a comment..." id="commentInput">
          <button class="comment-submit" id="submitComment">
            <i class="fa-solid fa-paper-plane"></i>
          </button>
        </div>
      </div>
      
      <div class="comments-list" id="commentsList">
        <% if (comments.length > 0) { %>
          <% comments.forEach(comment => { %>
            <div class="comment" data-comment-id="<%= comment._id %>">
              <div class="comment-avatar">
                <div style="width: 100%; height: 100%; background: linear-gradient(135deg, #667eea, #764ba2); border-radius: 50%; display: flex; align-items: center; justify-content: center; color: #fff; font-weight: 700;">
                  <%= comment.userId.username.charAt(0).toUpperCase() %>
                </div>
              </div>
              <div class="comment-content">
                <div class="comment-header">
                  <span class="comment-author"><%= comment.userId.username %></span>
                  <span class="comment-time"><%= new Date(comment.createdAt).toLocaleString('vi-VN') %></span>
                </div>
                <p class="comment-text"><%= comment.text %></p>
                <div class="comment-actions">
                  <button class="comment-action comment-like-btn" data-comment-id="<%= comment._id %>">
                    <i class="fa-regular fa-heart"></i>
                    <span><%= comment.likes || 0 %></span>
                  </button>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="empty-comments">
            <p>No comments yet. Be the first to comment!</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>
  
  <audio id="audioPlayer" src="<%= track.audioUrl %>"></audio>
  
  <script src="/public/js/player.js"></script>
  <script>
    // Generate waveform
    const waveform = document.getElementById('waveform');
    const totalBars = 100;
    
    for (let i = 0; i < totalBars; i++) {
      const bar = document.createElement('div');
      bar.className = 'waveform-bar';
      const height = Math.random() * 60 + 20;
      bar.style.height = height + '%';
      waveform.appendChild(bar);
    }
    
    // Like track
    document.getElementById('likeBtn').addEventListener('click', async function() {
      const trackId = this.dataset.trackId;
      try {
        const res = await fetch(`/api/tracks/${trackId}/like`, { method: 'POST' });
        const data = await res.json();
        if (data.success) {
          this.classList.toggle('liked');
          const icon = this.querySelector('i');
          icon.className = this.classList.contains('liked') ? 'fa-solid fa-heart' : 'fa-regular fa-heart';
          document.getElementById('likeCount').textContent = data.likes;
        }
      } catch (err) {
        console.error(err);
      }
    });
    
    // Submit comment
    document.getElementById('submitComment').addEventListener('click', async function() {
      const text = document.getElementById('commentInput').value.trim();
      if (!text) return;
      
      try {
        const res = await fetch('/api/tracks/<%= track._id %>/comments', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ text })
        });
        
        const data = await res.json();
        if (data.success) {
          location.reload();
        }
      } catch (err) {
        console.error(err);
      }
    });
    
    // Enter to submit
    document.getElementById('commentInput').addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        document.getElementById('submitComment').click();
      }
    });
  </script>
</body>
</html>
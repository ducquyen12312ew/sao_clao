<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    
    :root {
      --bg-primary: #000000;
      --bg-card: #121212;
      --bg-card-hover: #1a1a1a;
      --border-color: #282828;
      --text-primary: #ffffff;
      --text-secondary: #b3b3b3;
      --accent-color: #ffffff;
      --accent-hover: #e0e0e0;
    }
    
    body {
      font-family: 'Inter', sans-serif;
      background: var(--bg-primary);
      color: var(--text-primary);
      min-height: 100vh;
    }
    
    .header {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 64px;
      background: rgba(0, 0, 0, 0.95);
      backdrop-filter: blur(20px);
      border-bottom: 1px solid var(--border-color);
      padding: 0 32px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      z-index: 100;
    }
    
    .logo img { height: 36px; }
    
    .nav-menu {
      display: flex;
      gap: 32px;
      margin-left: 48px;
    }
    
    .nav-link {
      color: var(--text-secondary);
      text-decoration: none;
      font-weight: 600;
      font-size: 14px;
      display: flex;
      align-items: center;
      gap: 8px;
      transition: color 0.2s;
    }
    
    .nav-link:hover, .nav-link.active { color: var(--text-primary); }
    
    .header-actions {
      display: flex;
      gap: 20px;
      align-items: center;
    }
    
    .user-avatar {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background: linear-gradient(135deg, var(--accent-color), #1db954);
      color: #000;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 700;
      font-size: 14px;
    }
    
    .btn-logout {
      padding: 10px 24px;
      background: transparent;
      color: var(--text-primary);
      border: 1px solid var(--text-secondary);
      border-radius: 500px;
      cursor: pointer;
      font-weight: 600;
      font-size: 13px;
      font-family: 'Inter', sans-serif;
      transition: all 0.2s;
    }
    
    .btn-logout:hover {
      border-color: var(--text-primary);
      transform: scale(1.04);
    }
    
    .container {
      padding: 104px 48px 100px;
      max-width: 1800px;
      margin: 0 auto;
    }
    
    .page-header {
      margin-bottom: 48px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .page-title {
      font-size: 48px;
      font-weight: 900;
      letter-spacing: -1px;
    }
    
    .btn-create {
      padding: 14px 32px;
      background: var(--accent-color);
      color: #000;
      border: none;
      border-radius: 500px;
      font-weight: 700;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.2s;
      font-family: 'Inter', sans-serif;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .btn-create:hover {
      background: var(--accent-hover);
      transform: scale(1.04);
    }
    
    .playlists-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 24px;
    }
    
    .playlist-card {
      background: var(--bg-card);
      padding: 20px;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.3s;
      text-decoration: none;
      color: inherit;
      display: block;
    }
    
    .playlist-card:hover {
      background: var(--bg-card-hover);
      transform: translateY(-4px);
    }
    
    .playlist-cover {
      position: relative;
      margin-bottom: 20px;
      border-radius: 6px;
      aspect-ratio: 1;
      overflow: hidden;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
    }
    
    .playlist-cover-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr 1fr;
      width: 100%;
      height: 100%;
      background: var(--bg-card-hover);
    }
    
    .playlist-cover-item {
      width: 100%;
      height: 100%;
      background-size: cover;
      background-position: center;
      background-color: var(--bg-card);
    }
    
    .playlist-cover-empty {
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, #1a1a1a, #2a2a2a);
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .playlist-cover-empty i {
      font-size: 64px;
      color: var(--text-secondary);
    }
    
    .playlist-name {
      font-size: 16px;
      font-weight: 700;
      margin-bottom: 6px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    
    .playlist-count {
      font-size: 14px;
      color: var(--text-secondary);
      font-weight: 500;
    }
    
    .empty-state {
      text-align: center;
      padding: 100px 20px;
    }
    
    .empty-state h3 {
      font-size: 32px;
      font-weight: 800;
      margin-bottom: 16px;
    }
    
    .empty-state p {
      color: var(--text-secondary);
      font-size: 16px;
      margin-bottom: 32px;
    }
    
    .modal {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.8);
      display: none;
      align-items: center;
      justify-content: center;
      z-index: 2000;
    }
    
    .modal.active { display: flex; }
    
    .modal-content {
      background: var(--bg-card);
      border-radius: 8px;
      padding: 32px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.9);
    }
    
    .modal-title {
      font-size: 24px;
      font-weight: 800;
      margin-bottom: 24px;
    }
    
    .form-group { margin-bottom: 20px; }
    
    .form-label {
      display: block;
      font-size: 14px;
      font-weight: 600;
      margin-bottom: 8px;
    }
    
    .form-input {
      width: 100%;
      padding: 12px 16px;
      background: var(--bg-primary);
      border: 1px solid var(--border-color);
      border-radius: 6px;
      color: var(--text-primary);
      font-size: 14px;
      font-family: 'Inter', sans-serif;
    }
    
    .form-input:focus {
      outline: none;
      border-color: var(--accent-color);
    }
    
    .form-textarea {
      min-height: 100px;
      resize: vertical;
    }
    
    .modal-footer {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 24px;
    }
    
    .btn {
      padding: 12px 24px;
      border-radius: 500px;
      font-weight: 700;
      font-size: 14px;
      cursor: pointer;
      border: none;
      font-family: 'Inter', sans-serif;
      transition: all 0.2s;
    }
    
    .btn-primary {
      background: var(--accent-color);
      color: #000;
    }
    
    .btn-primary:hover {
      background: var(--accent-hover);
      transform: scale(1.04);
    }
    
    .btn-secondary {
      background: transparent;
      color: var(--text-primary);
      border: 1px solid var(--text-secondary);
    }
    
    .btn-secondary:hover { border-color: var(--text-primary); }
  </style>
</head>
<body>
  <div class="modal" id="createModal">
    <div class="modal-content">
      <h3 class="modal-title">Tạo playlist mới</h3>
      <div class="form-group">
        <label class="form-label">Tên playlist</label>
        <input type="text" class="form-input" id="playlistName" placeholder="Nhập tên playlist">
      </div>
      <div class="form-group">
        <label class="form-label">Mô tả</label>
        <textarea class="form-input form-textarea" id="playlistDescription" placeholder="Mô tả về playlist"></textarea>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" onclick="closeModal()">Hủy</button>
        <button class="btn btn-primary" onclick="createPlaylist()">Tạo</button>
      </div>
    </div>
  </div>

  <header class="header">
    <div style="display: flex; align-items: center;">
      <div class="logo">
        <img src="/public/img/saoclao.png" alt="SAOCLAO">
      </div>
      <nav class="nav-menu">
        <a href="/profile" class="nav-link">
          <i class="fa-solid fa-house"></i> Trang chủ
        </a>
        <a href="/playlists" class="nav-link active">
          <i class="fa-solid fa-music"></i> Playlist của tôi
        </a>
      </nav>
    </div>
    <div class="header-actions">
      <div class="user-avatar" title="<%= user.username %>">
        <%= user.username.charAt(0).toUpperCase() %>
      </div>
      <form method="post" action="/logout" style="display:inline">
        <button type="submit" class="btn-logout">Đăng xuất</button>
      </form>
    </div>
  </header>
  
  <div class="container">
    <div class="page-header">
      <h1 class="page-title">Playlist của tôi</h1>
      <button class="btn-create" onclick="openModal()">
        <i class="fa-solid fa-plus"></i> Tạo playlist
      </button>
    </div>
    
    <% if (playlists && playlists.length > 0) { %>
      <div class="playlists-grid">
        <% playlists.forEach((playlist) => { 
          const trackCount = playlist.tracks.length;
          const covers = playlist.tracks.slice(0, 4).map(t => t.coverUrl).filter(Boolean);
        %>
          <a href="/playlists/<%= playlist._id %>" class="playlist-card">
            <div class="playlist-cover">
              <% if (covers.length === 0) { %>
                <div class="playlist-cover-empty">
                  <i class="fa-solid fa-music"></i>
                </div>
              <% } else if (covers.length === 1) { %>
                <div class="playlist-cover-item" style="background-image: url('<%= covers[0] %>'); width: 100%; height: 100%;"></div>
              <% } else { %>
                <div class="playlist-cover-grid">
                  <% for (let i = 0; i < 4; i++) { %>
                    <% if (covers[i]) { %>
                      <div class="playlist-cover-item" style="background-image: url('<%= covers[i] %>');"></div>
                    <% } else { %>
                      <div class="playlist-cover-item"></div>
                    <% } %>
                  <% } %>
                </div>
              <% } %>
            </div>
            <div class="playlist-info">
              <div class="playlist-name"><%= playlist.name %></div>
              <div class="playlist-count"><%= trackCount %> bài hát</div>
            </div>
          </a>
        <% }) %>
      </div>
    <% } else { %>
      <div class="empty-state">
        <h3>Chưa có playlist nào</h3>
        <p>Tạo playlist đầu tiên của bạn ngay bây giờ</p>
        <button class="btn-create" onclick="openModal()">
          <i class="fa-solid fa-plus"></i> Tạo playlist
        </button>
      </div>
    <% } %>
  </div>
  
  <script>
    function openModal() {
      document.getElementById('createModal').classList.add('active');
      document.getElementById('playlistName').focus();
    }
    
    function closeModal() {
      document.getElementById('createModal').classList.remove('active');
      document.getElementById('playlistName').value = '';
      document.getElementById('playlistDescription').value = '';
    }
    
    async function createPlaylist() {
      const name = document.getElementById('playlistName').value.trim();
      const description = document.getElementById('playlistDescription').value.trim();
      
      if (!name) {
        alert('Vui lòng nhập tên playlist');
        return;
      }
      
      try {
        const res = await fetch('/playlists/create', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, description })
        });
        
        const data = await res.json();
        
        if (data.success) {
          location.reload();
        } else {
          alert(data.message || 'Tạo playlist thất bại');
        }
      } catch (err) {
        console.error(err);
        alert('Có lỗi xảy ra');
      }
    }
    
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') closeModal();
    });
    
    document.getElementById('playlistName')?.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') createPlaylist();
    });
  </script>
</body>
</html>